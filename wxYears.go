package wxXunHuan
//从1600年开始，到2400年结束。
//立春时间
var lichunlist =[
1900/2/4 13:51:31
1901/2/4 19:39:52
1902/2/5 1:38:10
1903/2/5 7:31:17
1904/2/5 13:24:07
1905/2/4 19:15:49
1906/2/5 1:03:54
1907/2/5 6:58:49
1908/2/5 12:47:13
1909/2/4 18:32:31
1910/2/5 0:27:22
1911/2/5 6:10:16
1912/2/5 11:53:31
1913/2/4 17:42:38
1914/2/4 23:29:16
1915/2/5 5:25:26
1916/2/5 11:13:58
1917/2/4 16:57:32
1918/2/4 22:53:05
1919/2/5 4:39:23
1920/2/5 10:26:26
1921/2/4 16:20:12
1922/2/4 22:06:24
1923/2/5 4:00:17
1924/2/5 9:49:32
1925/2/4 15:36:45
1926/2/4 21:38:16
1927/2/5 3:30:02
1928/2/5 9:16:22
1929/2/4 15:08:43
1930/2/4 20:51:07
1931/2/5 2:40:38
1932/2/5 8:29:20
1933/2/4 14:09:16
1934/2/4 20:03:37
1935/2/5 1:48:41
1936/2/5 7:29:16
1937/2/4 13:25:33
1938/2/4 19:14:58
1939/2/5 1:10:26
1940/2/5 7:07:32
1941/2/4 12:49:44
1942/2/4 18:48:34
1943/2/5 0:40:04
1944/2/5 6:22:55
1945/2/4 12:19:22
1946/2/4 18:03:53
1947/2/4 23:50:21
1948/2/5 5:42:00
1949/2/4 11:22:49
1950/2/4 17:20:46
1951/2/4 23:13:26
1952/2/5 4:52:54
1953/2/4 10:45:53
1954/2/4 16:30:41
1955/2/4 22:17:36
1956/2/5 4:11:55
1957/2/4 9:54:37
1958/2/4 15:49:11
1959/2/4 21:42:10
1960/2/5 3:23:09
1961/2/4 9:22:26
1962/2/4 15:17:20
1963/2/4 21:07:44
1964/2/5 3:04:55
1965/2/4 8:46:06
1966/2/4 14:37:48
1967/2/4 20:30:49
1968/2/5 2:07:23
1969/2/4 7:58:52
1970/2/4 13:45:42
1971/2/4 19:25:25
1972/2/5 1:20:13
1973/2/4 7:04:12
1974/2/4 13:00:05
1975/2/4 18:59:12
1976/2/5 0:39:28
1977/2/4 6:33:25
1978/2/4 12:26:57
1979/2/4 18:12:18
1980/2/5 0:09:28
1981/2/4 5:55:23
1982/2/4 11:45:28
1983/2/4 17:39:42
1984/2/4 23:18:44
1985/2/4 5:11:47
1986/2/4 11:07:42
1987/2/4 16:51:40
1988/2/4 22:42:49
1989/2/4 4:27:09
1990/2/4 10:14:00
1991/2/4 16:08:24
1992/2/4 21:48:17
1993/2/4 3:37:09
1994/2/4 9:30:56
1995/2/4 15:12:51
1996/2/4 21:07:54
1997/2/4 3:01:57
1998/2/4 8:56:52
1999/2/4 14:57:03
2000/2/4 20:40:24
2001/2/4 2:28:49
2002/2/4 8:24:05
2003/2/4 14:05:20
2004/2/4 19:56:13
2005/2/4 1:43:02
2006/2/4 7:27:16
2007/2/4 13:18:12
2008/2/4 19:00:24
2009/2/4 0:49:47
2010/2/4 6:47:51
2011/2/4 12:32:56
2012/2/4 18:22:23
2013/2/4 0:13:25
2014/2/4 6:03:15
2015/2/4 11:58:27
2016/2/4 17:46:00
2017/2/3 23:34:01
2018/2/4 5:28:25
2019/2/4 11:14:14
2020/2/4 17:03:12
2021/2/3 22:58:39
2022/2/4 4:50:36
2023/2/4 10:42:21
2024/2/4 16:26:53
2025/2/3 22:10:13
2026/2/4 4:01:51
2027/2/4 9:46:00
2028/2/4 15:30:53
2029/2/3 21:20:25
2030/2/4 3:08:04
] string


//判断平润年

func leap_year(year int) bool {

    if year%4 == 0 && year%100 != 0 || year%400 == 0 {

        return true

    } else {

        return false

    }

}


//得到每个年份每月的天数

func getMonthDays(year int, month int) int {

    days := 31

    switch days {

    case 2:

        {

            if leap_year(year) {

                days = 29

            } else {

                days = 28

            }

        }

    case 4, 6, 9, 11:

        {

            days = 30

        }

    }

    return days

}


//

func getTotalDays(year int, month int) int {

    totalDays := 0

    for i := 1; i < year; {

        if leap_year(i) == true {

            totalDays += 366

        } else {

            totalDays += 365

        }

        i++

    }

    for j := 1; j < month; {

        totalDays += getMonthDays(year, j)

        j++

    }

    return totalDays

}
